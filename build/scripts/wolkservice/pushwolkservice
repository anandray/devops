#!/usr/bin/php
<?php
include "storage.php";

error_reporting(E_ERROR);
// list of 8-16 cloudstore nodes running "cs"

getWolkDatabase(true);

if ( $argv[1] == "consensus" ) {
  $sql = "select hostname, publicip from servers where consensus = 1 order by hostname";
} else {
  // FOR AWS DEBUGGING
  // $sql = "select hostname, publicip, cloudprovider from servers where pushwolk=1 and cloudprovider = 'aws' order by hostname";
  $sql = "select hostname, publicip, cloudprovider, nodenumber from servers where pushwolk=1 order by nodenumber, hostname";
}
if ( $res = mysql_query($sql) ) {
  while ( $a = mysql_fetch_object($res) ) {
    $servers[] = $a;
  } 
} else {
  echo mysql_error();
  exit(0);
}

print_r($servers);
if ( ( $argv[1] == "restart" ) || ( $argv[2] == "restart" ) ) {
  $restart = "/usr/local/wolk";
} else {
  $restart = "";
  }

$scpservers = array( "c16.wolk.com");
function readin($prompt = ''){
    echo $prompt;
    return rtrim( fgets( STDIN ), "\n" );
}

function get_branch()
{
    $branch = "master";
}

function get_service()
{
    $service = "cs";
    return $service;
}

function get_name()
{
  return "system";
  $name = readin("Who are you? ");
  if(empty($name)){
    echo "\nI need to know who you are!\n";
    get_name();
  } else
    return $name;
}

function get_qa()
{
  return "none";
  $qa = readin("Who QA? ");
  if(empty($qa)){
    echo "\nI need to know who QA!\n";
    get_qa();
  } else
    return $qa;
}

function get_reason() {
  return  "system";
  $reason = readin("Why are you pushing? ");
  if(empty($reason)){
    echo "\nPlease supply a reason.\n";
    get_reason();
  } else
    return $reason;
}

$instanceGroup = $argv[1];


$branch = get_branch();
$service = get_service();
$name = get_name();
$qa = get_qa();
$reason = get_reason();

echo "Wolk Cloudstore [bin/wolk] Pushcode\n";

foreach ($servers as $s) {
    $server = $s->publicip;
    $hostname = $s->hostname;
    if ( ( $nodenumber == 4 ) || ( $nodenumber == 5 ) ) {
      $server= "c$nodenumber.wolk.com";      
    }
    $c = "ssh -q $server 'kill -9 $(pidof wolk) && rm -rf /var/log/wolk.log $restart'";
    echo "$hostname: $c\n";
    $output = array();
    exec($c, $output);
    print_r($output);

    $c = "ssh -q $server 'cd /root/go/src/github.com/wolkdb/cloudstore && git checkout `git ls-files -m` && git fetch origin && git merge origin/master && systemctl restart wolk.service 2> /var/log/git.err  > /var/log/git.log' > /dev/null 2>&1 &";
    echo "$hostname: $c\n";
    $output = array();
    exec($c, $output);
    print_r($output);
}
echo "\n";

/*
foreach ($scpservers as $server) {
    $c = "ssh -q $server 'kill -9 $(pidof wolk) && rm -rf /var/log/wolk.log'";
    echo "$c\n";
    $output = array();
    exec($c, $output);
    print_r($output);

//    $c = "scp /root/go/src/github.com/wolkdb/cloudstore/build/bin/wolk $server:/root/go/src/github.com/wolkdb/cloudstore/build/bin/wolk && ssh $server 'systemctl restart wolk.service 2> /var/log/git.err  > /var/log/git.log' > /dev/null 2>&1 &";
    $c = "ssh -q $server 'cd /root/go/src/github.com/wolkdb/cloudstore && git fetch origin && git merge origin/master && ssh -q $server systemctl restart wolk.service 2> /var/log/git.err  > /var/log/git.log' > /dev/null 2>&1 &";
    echo "$c\n";
    $output = array();
    exec($c, $output);
    print_r($output);
}
echo "\n";

*/
$today = date("F j, Y, g:i a T");
$mail_subject = "CODE PUSH wolk.com (" . $name . ") - $today";
$mail_body = "Code was pushed at " . $today . " to " . $instanceGroup . ".  Details below:\n\n";
$mail_body .= "Pushed by: " . $name . "\n";
$mail_body .= "QA by: " . $qa . "\n";
$mail_body .= "Reason: " . $reason . "\n\n";

//$mail_return = wolk_mail("engineering@wolk.com", "engineering@wolk.com", $mail_subject, $mail_body);
//if ($mail_return) echo("Message successfully sent!!\n");
?>
