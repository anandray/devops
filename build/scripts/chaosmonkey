#!/usr/bin/php
<?php
/*
SMALL CHAOS MONKEY: kill a consensus node every few minutes and bring it back a minute later consistently through the hour

# stage 1: 2x/hour, c1..c6 is killed, and then a minute later it is brought up again
0,30  * * * * /usr/bin/php /root/go/src/github.com/wolkdb/cloudstore/build/scripts/chaosmonkey c0.wolk.com 1 kill
2,32  * * * * /usr/bin/php /root/go/src/github.com/wolkdb/cloudstore/build/scripts/chaosmonkey c0.wolk.com 1 restart
5,35  * * * * /usr/bin/php /root/go/src/github.com/wolkdb/cloudstore/build/scripts/chaosmonkey c1.wolk.com 1 kill
7,37  * * * * /usr/bin/php /root/go/src/github.com/wolkdb/cloudstore/build/scripts/chaosmonkey c1.wolk.com 1 restart
10,40 * * * * /usr/bin/php /root/go/src/github.com/wolkdb/cloudstore/build/scripts/chaosmonkey c2.wolk.com 1 kill
12,42 * * * * /usr/bin/php /root/go/src/github.com/wolkdb/cloudstore/build/scripts/chaosmonkey c2.wolk.com 1 restart
15,45 * * * * /usr/bin/php /root/go/src/github.com/wolkdb/cloudstore/build/scripts/chaosmonkey c3.wolk.com 1 kill
17,47 * * * * /usr/bin/php /root/go/src/github.com/wolkdb/cloudstore/build/scripts/chaosmonkey c4.wolk.com 1 restart
20,50 * * * * /usr/bin/php /root/go/src/github.com/wolkdb/cloudstore/build/scripts/chaosmonkey c5.wolk.com 1 kill
22,52 * * * * /usr/bin/php /root/go/src/github.com/wolkdb/cloudstore/build/scripts/chaosmonkey c5.wolk.com 1 restart
25,55 * * * * /usr/bin/php /root/go/src/github.com/wolkdb/cloudstore/build/scripts/chaosmonkey c6.wolk.com 3 kill
27,57 * * * * /usr/bin/php /root/go/src/github.com/wolkdb/cloudstore/build/scripts/chaosmonkey c6.wolk.com 3 restart

# stage 4: every 5 minutes, c7 is killed, and then a minute later it is brought up again
0,5,10,15,20,25,30,35,40,45,50,55  * * * * * /usr/bin/php /root/go/src/github.com/wolkdb/cloudstore/build/scripts/chaosmonkey c7.wolk.com 4 kill
1,6,11,16,21,26,31,36,41,46,51,56  * * * * * /usr/bin/php /root/go/src/github.com/wolkdb/cloudstore/build/scripts/chaosmonkey c7.wolk.com 4 restart

# stage 5: every 5 minutes, c7 is killed, and then a minute later it is brought up again
2,7,12,17,22,27,32,37,42,47,52,57   * * * * * /usr/bin/php /root/go/src/github.com/wolkdb/cloudstore/build/scripts/chaosmonkey c7.wolk.com 5 kill
3,8,13,18,23,28,33,38,43,48,53,58   * * * * * /usr/bin/php /root/go/src/github.com/wolkdb/cloudstore/build/scripts/chaosmonkey c7.wolk.com 5 restart
*/

include "storage.php";
error_reporting(E_ERROR);
define('MAX_PROCESS_NUM', 100);
define('TIMEOUT',120);

function myexec($cmd, $run) {
   echo "$cmd\n";
   if ( $run ) {
	    $output = array();
    	    exec($cmd, $output);
	    if ( count($output) > 0 ) {
			       	    print_r($output);
	    }
   }
}

if ( $argc < 3 ) {
   echo "restartwolk [server] [stage=0..5]\n";
   exit(0);
}
getWolkDatabase(true);

$server = isset($argv[1]) ? $argv[1] : false;
$stage = isset($argv[2]) ? $argv[2] : 0;
$act = isset($argv[3]) ? $argv[3] : "kill";
if ( $server == false ) {
   echo "node [$node] not found;\n";
   exit(0);
} else {
  echo "restarting Node found with ip $server\n";
}

$httpport = 80 + $stage;
$rpcport = 9900 + $stage;
$p2pport = 30300 + 1000*$stage;
$maindir = "/root/go/src/github.com/wolkdb/cloudstore";
$httpport = ( $stage == 0 ) ? 443 : 80 + $stage;
$binary = ( $stage == 0 ) ? "wolk" : "wolk$stage";
$logfile = "/var/log/$binary.log";
$dst_toml = "$maindir/$binary.toml";
$fullcmd = "$maindir/build/bin/$binary --verbosity=6 --datadir /usr/local/$binary --rpc --rpcaddr 0.0.0.0 --rpccorsdomain=* --rpcvhosts=* --rpcport $rpcport --port $p2pport --httpport $httpport --wolklog nothing --config $dst_toml";
if ( $act == "kill" ) {
  $cmds[] = "ssh $server 'pkill $binary'";
} else {
  $cmds[] = "ssh $server '$fullcmd >> $logfile 2>&1 &'";
}
foreach ($cmds as $cmd) {
	myexec($cmd, true);
}
?>
