@version:3.5
@include "scl.conf"

# syslog-ng configuration file.
#
# This should behave pretty much like the original syslog on RedHat. But
# it could be configured a lot smarter.
#
# See syslog-ng(8) and syslog-ng.conf(5) for more information.
#
# Note: it also sources additional configuration files (*.conf)
#       located in /etc/syslog-ng/conf.d/

options {
    flush_lines (0);
    time_reopen (10);
    log_fifo_size (1000);
    chain_hostnames (off);
    use_dns (no);
    use_fqdn (no);
    create_dirs (no);
    keep_hostname (yes);
};

source s_sys {
    system();
    internal();
    # udp(ip(0.0.0.0) port(514));
};

source s_tcp_net {
        tcp(ip(0.0.0.0) port(5000) max-connections(5000));
};

destination d_mesg { file("/var/log/messages"); };

filter f_default    { level(info..emerg) and
                        not (facility(mail)
                        or facility(authpriv)
                        or facility(cron)); };

log { source(s_sys); filter(f_default); destination(d_mesg); };

# wolk log collection

filter f_cloud { match("wolk-cloud" value("PROGRAM") value("MSG") value("MSGHDR")); };
destination d_cloud {
            file("/disk1/log/$YEAR/$MONTH/$DAY/$HOUR/$MIN.cloud"
	    owner( root ) group( root ) perm ( 0777 ) dir_perm( 0777 ) create_dirs ( yes )
        template ( "$MESSAGE\n" ) );
};
log { source(s_tcp_net); filter(f_cloud); destination(d_cloud); };

filter f_debug0 { match("wolk-debug0" value("PROGRAM") value("MSG") value("MSGHDR")); };
destination d_debug0 {
        file("/disk1/log0/$YEAR/$MONTH/$DAY/$HOUR/$MIN.log"
        owner( root ) group( root ) perm ( 0777 ) dir_perm( 0777 ) create_dirs ( yes )
        template ( "$MESSAGE\n" ) );
};
log { source(s_tcp_net); filter(f_debug0); destination(d_debug0); };

filter f_debug1 { match("wolk-debug1" value("PROGRAM") value("MSG") value("MSGHDR")); };
destination d_debug1 {
        file("/disk1/log1/$YEAR/$MONTH/$DAY/$HOUR/$MIN.log"
        owner( root ) group( root ) perm ( 0777 ) dir_perm( 0777 ) create_dirs ( yes )
        template ( "$MESSAGE\n" ) );
};
log { source(s_tcp_net); filter(f_debug1); destination(d_debug1); };

filter f_debug2 { match("wolk-debug2" value("PROGRAM") value("MSG") value("MSGHDR")); };
destination d_debug2 {
        file("/disk1/log2/$YEAR/$MONTH/$DAY/$HOUR/$MIN.log"
        owner( root ) group( root ) perm ( 0777 ) dir_perm( 0777 ) create_dirs ( yes )
        template ( "$MESSAGE\n" ) );
};
log { source(s_tcp_net); filter(f_debug2); destination(d_debug2); };

filter f_debug3 { match("wolk-debug3" value("PROGRAM") value("MSG") value("MSGHDR")); };
destination d_debug3 {
        file("/disk1/log3/$YEAR/$MONTH/$DAY/$HOUR/$MIN.log"
        owner( root ) group( root ) perm ( 0777 ) dir_perm( 0777 ) create_dirs ( yes )
        template ( "$MESSAGE\n" ) );
};
log { source(s_tcp_net); filter(f_debug3); destination(d_debug3); };

filter f_debug4 { match("wolk-debug4" value("PROGRAM") value("MSG") value("MSGHDR")); };
destination d_debug4 {
        file("/disk1/log4/$YEAR/$MONTH/$DAY/$HOUR/$MIN.log"
        owner( root ) group( root ) perm ( 0777 ) dir_perm( 0777 ) create_dirs ( yes )
        template ( "$MESSAGE\n" ) );
};
log { source(s_tcp_net); filter(f_debug4); destination(d_debug4); };

filter f_debug5 { match("wolk-debug5" value("PROGRAM") value("MSG") value("MSGHDR")); };
destination d_debug5 {
        file("/disk1/log5/$YEAR/$MONTH/$DAY/$HOUR/$MIN.log"
        owner( root ) group( root ) perm ( 0777 ) dir_perm( 0777 ) create_dirs ( yes )
        template ( "$MESSAGE\n" ) );
};
log { source(s_tcp_net); filter(f_debug5); destination(d_debug5); };

filter f_mining { match("wolk-mining" value("PROGRAM") value("MSG") value("MSGHDR")); };
destination d_mining {
	    file("/disk1/log/$YEAR/$MONTH/$DAY/$HOUR/$MIN.log"
	    owner( root ) group( root ) perm ( 0777 ) dir_perm( 0777 ) create_dirs ( yes )
        template ( "$MESSAGE\n" ) );
};
log { source(s_tcp_net); filter(f_mining); destination(d_mining); };

filter f_chunk { match("wolk-netstats" value("PROGRAM") value("MSG") value("MSGHDR")); };
destination d_chunk {
	    file("/disk1/log/$YEAR/$MONTH/$DAY/$HOUR/$MIN.chunk"
	    owner( root ) group( root ) perm ( 0777 ) dir_perm( 0777 ) create_dirs ( yes )
        template ( "$MESSAGE\n" ) );
};
log { source(s_tcp_net); filter(f_chunk); destination(d_chunk); };

filter f_tcp { match("wolk-tcp" value("PROGRAM") value("MSG") value("MSGHDR")); };
destination d_tcp {
	    file("/disk1/log/$YEAR/$MONTH/$DAY/$HOUR/$MIN.log"
	    owner( root ) group( root ) perm ( 0777 ) dir_perm( 0777 ) create_dirs ( yes )
        template ( "$MESSAGE\n" ) );
};
log { source(s_tcp_net); filter(f_tcp); destination(d_tcp); };

filter f_http { match("wolk-http" value("PROGRAM") value("MSG") value("MSGHDR")); };
destination d_http {
            file("/disk1/log/$YEAR/$MONTH/$DAY/$HOUR/$MIN.log"
	    owner( root ) group( root ) perm ( 0777 ) dir_perm( 0777 ) create_dirs ( yes )
        template ( "$MESSAGE\n" ) );
};
log { source(s_tcp_net); filter(f_http); destination(d_http); };

# Source additional configuration files (.conf extension only)
@include "/etc/syslog-ng/conf.d/*.conf"


# vim:ft=syslog-ng:ai:si:ts=4:sw=4:et:
