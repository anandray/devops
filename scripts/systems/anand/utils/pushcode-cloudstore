#!/bin/bash

input1="sql"
input2="nosql"
input3="plasma"
input4="cloudstore"

if [ -z $1 ]
  then
    echo "
           Usage: 
                 \"pushcode <sql>\" 	--> plasma-dubai-ali
					--> plasma-netherlands-azu
					--> plasma-saopaulo-aws
					--> plasma-singapore-aws
					--> plasma-victoria-azu
					--> plasma-shanghai-ali

                 \"pushcode <nosql>\" --> plasma-frankfurt-aws
					--> plasma-ireland-azu
					--> plasma-jakarta-ali
					--> plasma-mumbai-aws
					--> plasma-quebec-azu
					--> plasma-beijing-ali

                 \"pushcode <plasma>\" --> anand-sanmateo
					--> tapas-kolkata
					--> plasma-london-aws
					--> plasma-singapore-ali
					--> plasma-osaka-azu
					--> plasma-tokyo-aws
					--> plasma-hongkong-azu
					--> plasma-seoul-aws
					--> plasma-paris-aws
					--> plasma-chennai-azu
					--> plasma-kl-ali
					--> plasma-sydney-aws
					--> plasma-beijing-ali
					--> dev-ru

                 \"pushcode <cloudstore>\" --> anand-sanmateo
	 	 	 	 	 --> tapas-kolkata
	 	 	 	 	 --> plasma-london-aws
	 	 	 	 	 --> plasma-osaka-azu
	 	 	 	 	 --> plasma-tokyo-aws
	 	 	 	 	 --> plasma-hongkong-azu
	 	 	 	 	 --> plasma-seoul-aws
	 	 	 	 	 --> plasma-paris-aws
	 	 	 	 	 --> plasma-chennai-azu
	 	 	 	 	 --> plasma-kl-ali
	 	 	 	 	 --> plasma-sydney-aws
					 --> plasma-shenzhen-ali
	 	 	 	 	 --> dev-ru
"
fi

bold=$(tput bold)
normal=$(tput sgr0)

if [[ $1 == $input1 ]];
  then
    echo "
${bold}Pushing to [SQL]"

echo ${normal}

# enable cronjob to start sql
                 ssh -q 47.91.105.205 /root/scripts/sql-cron-enable.sh 2>&1 &
                 ssh -q 23.97.179.160 /root/scripts/sql-cron-enable.sh 2>&1 &
                 ssh -q 18.231.4.13 /root/scripts/sql-cron-enable.sh 2>&1 &
                 ssh -q 52.221.179.3 /root/scripts/sql-cron-enable.sh 2>&1 &
                 ssh -q 23.101.232.215 /root/scripts/sql-cron-enable.sh 2>&1 &
                 ssh -q 106.14.197.74 /root/scripts/sql-cron-enable.sh 2>&1 &

sleep 5

#### start sql.sh ####
if [ ! -d /root/sql/bin ]; then
mkdir -p /root/sql/bin
fi

if [ ! -d /root/sql/qdata/dd ]; then
mkdir -p /root/sql/qdata/dd
fi

# compile sql binary
cd /root/go/src/github.com/wolkdb/plasma
git fetch origin &> /dev/null && git merge origin/master &> /dev/null &
make sql &> /dev/null &
'yes' | cp -rf /root/go/src/github.com/wolkdb/plasma/build/bin/sql /root/sql/bin/ &> /dev/null &
#### status bar ####
bold=$(tput bold)
normal=$(tput sgr0)

# indicates 100%, as reference
TOT=100
# number of elements in the progress bar
ITR=10
# number of seconds to wait for
SEC=10
 
# counters
CNT=0
CUR=0
 
# for simplicity, adapts the elements to the number of seconds if they are a few
if [ $SEC -lt $ITR ];
then
   ITR=$SEC
fi
 
# a bunch of math
let SYM=ITR
let INC=TOT/ITR
let SPN=SEC/ITR
 
# prepares body and head of a printable line
HEAD='Status: ['
BODY=''
# main loop, it loops over the number of elements in the progress bar
while [ $CNT -le $ITR ];
do
   BODY=''
 
   # defines how many elements to put into the bar
   POUNDS=0
   while [ $POUNDS -lt $CNT ];
   do
       BODY="$BODY#"
       let POUNDS=POUNDS+1
   done
 
   # defines how many blank spaces to append
   let BLANKS=SYM-CNT
   while [ $BLANKS -gt 0 ];
   do
       BODY="$BODY "
       let BLANKS=BLANKS-1
   done
 
   # defines the line tail with the progress percentage
   TAIL="] ($CUR%)"
   echo -ne "$HEAD$BODY$TAIL\r"
   let CUR=CUR+INC
   let CNT=CNT+1
 
   # spins before of the next update in case its needed
   SPIN=$SPN
   while [ $SPIN -gt 0 ];
   do
       sleep 1
       let SPIN=SPIN-1
   done
done
 
# fixes any approximation caused by the integer arithmetic
if [ $CUR -ne 100 ];
then
 TAIL="] (100%)"
 echo -ne "$HEAD$BODY$TAIL\r"
fi
 
echo ''
#### end of status bar ####
# /end sql binary compilation

bold=$(tput bold)
normal=$(tput sgr0)

MD5=`ssh -q nginx.wolk.com md5sum /root/go/src/github.com/wolkdb/plasma/build/bin/sql | awk '{print$1}'`

if ! md5sum /root/sql/bin/sql | grep $MD5 &> /dev/null; then

echo "
${bold}SQL binary on nginx.wolk.com has changed. Copying binary from nginx.wolk.com...
"
echo ${normal}

scp -C -p nginx.wolk.com:/root/go/src/github.com/wolkdb/plasma/build/bin/sql /root/sql/bin/sql 2> /dev/null && chmod +x /root/sql/bin/sql 2> /dev/null &

sleep 3

else
echo "
${bold}MD5 of Plasma binary is unchanged on nginx.wolk.com..."
echo ${normal}
fi


if ! ssh -q www6001 md5sum /var/www/vhosts/mdotm.com/httpdocs/.start/sql | grep $MD5 &> /dev/null; then
echo "

${bold}MD5 of Plasma binary on www6001 differs from nginx.wolk.com. Copying binary from nginx.wolk.com to www6001...
"
echo ${normal}

scp -q -C -p nginx.wolk.com:/root/go/src/github.com/wolkdb/plasma/build/bin/sql www6001:/var/www/vhosts/mdotm.com/httpdocs/.start/sql 2> /dev/null | grep -v 'Permanently added'

sleep 3

else
echo "
${bold}MD5 of Plasma binary on www6001 and nginx.wolk.com are identical...
"
echo ${normal}

fi
#### end of sql.sh ####

	 	 ssh -q 47.91.105.205 /root/scripts/sql.sh 2>&1 &
	 	 ssh -q 23.97.179.160 /root/scripts/sql.sh 2>&1 &
	 	 ssh -q 18.231.4.13 /root/scripts/sql.sh 2>&1 &
	 	 ssh -q 52.221.179.3 /root/scripts/sql.sh 2>&1 &
	 	 ssh -q 23.101.232.215 /root/scripts/sql.sh 2>&1 &
	 	 ssh -q 106.14.197.74 /root/scripts/sql.sh 2>&1 &    

#### status bar ####
bold=$(tput bold)
normal=$(tput sgr0)

# indicates 100%, as reference
TOT=100
# number of elements in the progress bar
ITR=45
# number of seconds to wait for
SEC=45
 
# counters
CNT=0
CUR=0
 
# for simplicity, adapts the elements to the number of seconds if they are a few
if [ $SEC -lt $ITR ];
then
   ITR=$SEC
fi
 
# a bunch of math
let SYM=ITR
let INC=TOT/ITR
let SPN=SEC/ITR
 
# prepares body and head of a printable line
HEAD='Status: ['
BODY=''
# main loop, it loops over the number of elements in the progress bar
while [ $CNT -le $ITR ];
do
   BODY=''
 
   # defines how many elements to put into the bar
   POUNDS=0
   while [ $POUNDS -lt $CNT ];
   do
       BODY="$BODY#"
       let POUNDS=POUNDS+1
   done
 
   # defines how many blank spaces to append
   let BLANKS=SYM-CNT
   while [ $BLANKS -gt 0 ];
   do
       BODY="$BODY "
       let BLANKS=BLANKS-1
   done
 
   # defines the line tail with the progress percentage
   TAIL="] ($CUR%)"
   echo -ne "$HEAD$BODY$TAIL\r"
   let CUR=CUR+INC
   let CNT=CNT+1
 
   # spins before of the next update in case its needed
   SPIN=$SPN
   while [ $SPIN -gt 0 ];
   do
       sleep 1
       let SPIN=SPIN-1
   done
done
 
# fixes any approximation caused by the integer arithmetic
if [ $CUR -ne 100 ];
then
 TAIL="] (100%)"
 echo -ne "$HEAD$BODY$TAIL\r"
fi
 
echo ''
#### end of status bar ####

#    echo -e "PUSHCODE api --> api-colorfulnotion-com --project colorfulnotion-1307 at `date +'%b %d, %Y, %T'`" | mailx -A gmail -s "[CODE PUSH] PUSHCODE -- api --> api-colorfulnotion-com --project colorfulnotion-1307 | `date +'%b %d, %Y, %T'`" engineering@crosschannel.com &> /dev/null

bold=$(tput bold)
normal=$(tput sgr0)

elif [[ $1 == $input2 ]];
  then
    echo "
${bold}Pushing to [NOSQL]"

echo ${normal}

# enable cronjob to start nosql
	 	 ssh -q 52.59.224.202 /root/scripts/nosql-cron-enable.sh 2>&1 &
	 	 ssh -q 23.97.169.168 /root/scripts/nosql-cron-enable.sh 2>&1 &
	 	 ssh -q 149.129.217.64 /root/scripts/nosql-cron-enable.sh 2>&1 &
	 	 ssh -q 13.126.94.230 /root/scripts/nosql-cron-enable.sh 2>&1 &
	 	 ssh -q 40.86.223.150 /root/scripts/nosql-cron-enable.sh 2>&1 &
	 	 ssh -q 60.205.185.220 /root/scripts/nosql-cron-enable.sh 2>&1 &

sleep 5

#### start of nosql.sh ####
if [ ! -d /root/nosql/bin ]; then
mkdir -p /root/nosql/bin
fi

if [ ! -d /root/nosql/qdata/dd ]; then
mkdir -p /root/nosql/qdata/dd
fi

# compile nosql binary
cd /root/go/src/github.com/wolkdb/plasma
git fetch origin &> /dev/null && git merge origin/master &> /dev/null &
make nosql &> /dev/null &
'yes' | cp -rf /root/go/src/github.com/wolkdb/plasma/build/bin/nosql /root/nosql/bin/ &> /dev/null &
#### status bar ####
bold=$(tput bold)
normal=$(tput sgr0)

# indicates 100%, as reference
TOT=100
# number of elements in the progress bar
ITR=10
# number of seconds to wait for
SEC=10
 
# counters
CNT=0
CUR=0
 
# for simplicity, adapts the elements to the number of seconds if they are a few
if [ $SEC -lt $ITR ];
then
   ITR=$SEC
fi
 
# a bunch of math
let SYM=ITR
let INC=TOT/ITR
let SPN=SEC/ITR
 
# prepares body and head of a printable line
HEAD='Status: ['
BODY=''
# main loop, it loops over the number of elements in the progress bar
while [ $CNT -le $ITR ];
do
   BODY=''
 
   # defines how many elements to put into the bar
   POUNDS=0
   while [ $POUNDS -lt $CNT ];
   do
       BODY="$BODY#"
       let POUNDS=POUNDS+1
   done
 
   # defines how many blank spaces to append
   let BLANKS=SYM-CNT
   while [ $BLANKS -gt 0 ];
   do
       BODY="$BODY "
       let BLANKS=BLANKS-1
   done
 
   # defines the line tail with the progress percentage
   TAIL="] ($CUR%)"
   echo -ne "$HEAD$BODY$TAIL\r"
   let CUR=CUR+INC
   let CNT=CNT+1
 
   # spins before of the next update in case its needed
   SPIN=$SPN
   while [ $SPIN -gt 0 ];
   do
       sleep 1
       let SPIN=SPIN-1
   done
done
 
# fixes any approximation caused by the integer arithmetic
if [ $CUR -ne 100 ];
then
 TAIL="] (100%)"
 echo -ne "$HEAD$BODY$TAIL\r"
fi
 
echo ''
#### end of status bar ####
# /end nosql binary compilation

bold=$(tput bold)
normal=$(tput sgr0)

MD5=`ssh -q nginx.wolk.com md5sum /root/go/src/github.com/wolkdb/plasma/build/bin/nosql | awk '{print$1}'`

if ! md5sum /root/nosql/bin/nosql | grep $MD5 &> /dev/null; then

echo "
${bold}Plasma binary on nginx.wolk.com has changed. Copying binary from nginx.wolk.com...
"
echo ${normal}

scp -C -p nginx.wolk.com:/root/go/src/github.com/wolkdb/plasma/build/bin/nosql /root/nosql/bin/nosql 2> /dev/null && chmod +x /root/nosql/bin/nosql 2> /dev/null &

sleep 3

else
echo "
${bold}MD5 of Plasma binary is unchanged on nginx.wolk.com..."
echo ${normal}
fi


if ! ssh -q www6001 md5sum /var/www/vhosts/mdotm.com/httpdocs/.start/nosql | grep $MD5 &> /dev/null; then
echo "

${bold}MD5 of Plasma binary on www6001 differs from nginx.wolk.com. Copying binary from nginx.wolk.com to www6001...
"
echo ${normal}

scp -q -C -p nginx.wolk.com:/root/go/src/github.com/wolkdb/plasma/build/bin/nosql www6001:/var/www/vhosts/mdotm.com/httpdocs/.start/nosql 2> /dev/null | grep -v 'Permanently added'

sleep 3

else
echo "
${bold}MD5 of Plasma binary on www6001 and nginx.wolk.com are identical...
"
echo ${normal}

fi
#### end of nosql.sh ####

	 	 ssh -q 52.59.224.202 /root/scripts/nosql.sh 2>&1 &
	 	 ssh -q 23.97.169.168 /root/scripts/nosql.sh 2>&1 &
	 	 ssh -q 149.129.217.64 /root/scripts/nosql.sh 2>&1 &
	 	 ssh -q 13.126.94.230 /root/scripts/nosql.sh 2>&1 &
	 	 ssh -q 40.86.223.150 /root/scripts/nosql.sh 2>&1 &
	 	 ssh -q 60.205.185.220 /root/scripts/nosql.sh 2>&1 &

#### status bar ####
bold=$(tput bold)
normal=$(tput sgr0)

# indicates 100%, as reference
TOT=100
# number of elements in the progress bar
ITR=45
# number of seconds to wait for
SEC=45
 
# counters
CNT=0
CUR=0
 
# for simplicity, adapts the elements to the number of seconds if they are a few
if [ $SEC -lt $ITR ];
then
   ITR=$SEC
fi
 
# a bunch of math
let SYM=ITR
let INC=TOT/ITR
let SPN=SEC/ITR
 
# prepares body and head of a printable line
HEAD='Status: ['
BODY=''
# main loop, it loops over the number of elements in the progress bar
while [ $CNT -le $ITR ];
do
   BODY=''
 
   # defines how many elements to put into the bar
   POUNDS=0
   while [ $POUNDS -lt $CNT ];
   do
       BODY="$BODY#"
       let POUNDS=POUNDS+1
   done
 
   # defines how many blank spaces to append
   let BLANKS=SYM-CNT
   while [ $BLANKS -gt 0 ];
   do
       BODY="$BODY "
       let BLANKS=BLANKS-1
   done
 
   # defines the line tail with the progress percentage
   TAIL="] ($CUR%)"
   echo -ne "$HEAD$BODY$TAIL\r"
   let CUR=CUR+INC
   let CNT=CNT+1
 
   # spins before of the next update in case its needed
   SPIN=$SPN
   while [ $SPIN -gt 0 ];
   do
       sleep 1
       let SPIN=SPIN-1
   done
done
 
# fixes any approximation caused by the integer arithmetic
if [ $CUR -ne 100 ];
then
 TAIL="] (100%)"
 echo -ne "$HEAD$BODY$TAIL\r"
fi
 
echo ''
#### end of status bar ####
#   echo -e "PUSHCODE dev --> dev.colorfulnotion.com at `date +'%b %d, %Y, %T'`" | mailx -A gmail -s "[CODE PUSH] PUSHCODE -- api --> sourabh.crosschannel.com | `date +'%b %d, %Y, %T'`" engineering@crosschannel.com &> /dev/null

elif [[ $1 == $input3 ]];
    then
    echo "
Pushing to PLASMA
"

# enable cronjob to start
	 	 ssh -q 47.91.105.205 /root/scripts/plasma-cron-enable.sh 2>&1 &
	 	 ssh -q 23.97.179.160 /root/scripts/plasma-cron-enable.sh 2>&1 &
	 	 ssh -q 18.231.4.13 /root/scripts/plasma-cron-enable.sh 2>&1 &
	 	 ssh -q 52.221.179.3 /root/scripts/plasma-cron-enable.sh 2>&1 &
	 	 ssh -q 23.101.232.215 /root/scripts/plasma-cron-enable.sh 2>&1 &
	 	 ssh -q 52.59.224.202 /root/scripts/plasma-cron-enable.sh 2>&1 &
	 	 ssh -q 23.97.169.168 /root/scripts/plasma-cron-enable.sh 2>&1 &
	 	 ssh -q 149.129.217.64 /root/scripts/plasma-cron-enable.sh 2>&1 &
	 	 ssh -q 13.126.94.230 /root/scripts/plasma-cron-enable.sh 2>&1 &
	 	 ssh -q 40.86.223.150 /root/scripts/plasma-cron-enable.sh 2>&1 &
	 	 ssh -q 12.20.98.42 /root/scripts/plasma-cron-enable.sh 2>&1 &
	 	 ssh -q 150.129.65.4 /root/scripts/plasma-cron-enable.sh 2>&1 &
	 	 ssh -q 18.130.136.122 /root/scripts/plasma-cron-enable.sh 2>&1 &
	 	 ssh -q 47.74.252.13 /root/scripts/plasma-cron-enable.sh 2>&1 &
	 	 ssh -q 40.74.65.156 /root/scripts/plasma-cron-enable.sh 2>&1 &
	 	 ssh -q 54.64.176.94 /root/scripts/plasma-cron-enable.sh 2>&1 &
	 	 ssh -q 65.52.166.152 /root/scripts/plasma-cron-enable.sh 2>&1 &
	 	 ssh -q 13.125.119.66 /root/scripts/plasma-cron-enable.sh 2>&1 &
	 	 ssh -q 52.47.189.22 /root/scripts/plasma-cron-enable.sh 2>&1 &
	 	 ssh -q 104.211.221.190 /root/scripts/plasma-cron-enable.sh 2>&1 &
	 	 ssh -q 47.254.214.76 /root/scripts/plasma-cron-enable.sh 2>&1 &
	 	 ssh -q 13.211.61.227 /root/scripts/plasma-cron-enable.sh 2>&1 &
	 	 ssh -q 185.22.174.203 /root/scripts/plasma-cron-enable.sh 2>&1 &
	 	 ssh -q  /root/scripts/plasma-cron-enable.sh 2>&1 &

#China
	 	 ssh -q 106.14.197.74 /root/scripts/plasma-cron-enable.sh 2>&1 &
	 	 ssh -q 60.205.185.220 /root/scripts/plasma-cron-enable.sh 2>&1 &
	 	 ssh -q 120.77.46.213 /root/scripts/plasma-cron-enable.sh 2>&1 &

	 	 ssh -q yaron-phobos-b /root/scripts/plasma-cron-enable.sh 2>&1 &
	 	 ssh -q yaron-phobos-c /root/scripts/plasma-cron-enable.sh 2>&1 &
bold=$(tput bold)
normal=$(tput sgr0)

MD5=`ssh -q yaron-phobos-a md5sum /root/go/src/github.com/wolkdb/plasma/build/bin/plasma | awk '{print$1}'`
if ! md5sum /root/go/src/github.com/wolkdb/plasma/build/bin/plasma | grep $MD5 &> /dev/null; then

echo "
${bold}Plasma binary on yaron-phobos-a has changed. Copying binary from yaron-phobos-a...
"
echo ${normal}

scp -C -p yaron-phobos-a:/root/go/src/github.com/wolkdb/plasma/build/bin/plasma /root/go/src/github.com/wolkdb/plasma/build/bin/plasma 2> /dev/null && chmod +x /root/go/src/github.com/wolkdb/plasma/build/bin/plasma 2> /dev/null &

sleep 3

else
echo "
${bold}MD5 of Plasma binary is unchanged on yaron-phobos-a..."
echo ${normal}
fi


if ! ssh -q www6001 md5sum /var/www/vhosts/mdotm.com/httpdocs/.start/plasma | grep $MD5 &> /dev/null; then
echo "

${bold}MD5 of Plasma binary on www6001 differs from yaron-phobos-a. Copying binary from yaron-phobos-a to www6001...
"
echo ${normal}

scp -q -C -p yaron-phobos-a:/root/go/src/github.com/wolkdb/plasma/build/bin/plasma www6001:/var/www/vhosts/mdotm.com/httpdocs/.start/plasma 2> /dev/null | grep -v 'Permanently added'

sleep 3

else
echo "
${bold}MD5 of Plasma binary on www6001 and yaron-phobos-a are identical...
"
echo ${normal}

fi

#### status bar ####
####/ End status bar ####

echo "
${bold}Pushing binary to plasma instances and restarting plasma...
"
echo ${normal}

# /tmp/plasma-restart1.sh 2>&1 &
ssh -q 18.130.136.122 /root/scripts/plasma-refresh.sh &> /dev/null 2>&1 &
ssh -q 47.74.252.13 /root/scripts/plasma-refresh.sh &> /dev/null 2>&1 &
ssh -q 40.74.65.156 /root/scripts/plasma-refresh.sh &> /dev/null 2>&1 &
ssh -q 54.64.176.94 /root/scripts/plasma-refresh.sh &> /dev/null 2>&1 &
ssh -q 65.52.166.152 /root/scripts/plasma-refresh.sh &> /dev/null 2>&1 &
ssh -q 13.125.119.66 /root/scripts/plasma-refresh.sh &> /dev/null 2>&1 &
ssh -q 52.47.189.22 /root/scripts/plasma-refresh.sh &> /dev/null 2>&1 &
ssh -q 104.211.221.190 /root/scripts/plasma-refresh.sh &> /dev/null 2>&1 &
ssh -q 47.254.214.76 /root/scripts/plasma-refresh.sh &> /dev/null 2>&1 &
ssh -q 13.211.61.227 /root/scripts/plasma-refresh.sh &> /dev/null 2>&1 &
ssh -q 185.22.174.203 /root/scripts/plasma-refresh.sh &> /dev/null 2>&1 &
ssh -q 12.20.98.42 /root/scripts/plasma-refresh.sh &> /dev/null 2>&1 & #anand-sanmateo

# other group
ssh -q 47.91.105.205 /root/scripts/plasma-refresh.sh &> /dev/null 2>&1 &
ssh -q 149.129.217.64 /root/scripts/plasma-refresh.sh &> /dev/null 2>&1 &
ssh -q 13.126.94.230 /root/scripts/plasma-refresh.sh &> /dev/null 2>&1 &
ssh -q 52.59.224.202 /root/scripts/plasma-refresh.sh &> /dev/null 2>&1 &
ssh -q 18.231.4.13 /root/scripts/plasma-refresh.sh &> /dev/null 2>&1 &
ssh -q 23.97.179.160 /root/scripts/plasma-refresh.sh &> /dev/null 2>&1 &
ssh -q 23.101.232.215 /root/scripts/plasma-refresh.sh &> /dev/null 2>&1 &
ssh -q 23.97.169.168 /root/scripts/plasma-refresh.sh &> /dev/null 2>&1 &
ssh -q 40.86.223.150 /root/scripts/plasma-refresh.sh &> /dev/null 2>&1 &
ssh -q 52.221.179.3 /root/scripts/plasma-refresh.sh &> /dev/null 2>&1 &
ssh -q 150.129.65.4 /root/scripts/plasma-refresh.sh &> /dev/null 2>&1 & #tapas-kolkata

# china
ssh -q 106.14.197.74 /root/scripts/plasma-refresh.sh &> /dev/null 2>&1 &
ssh -q 60.205.185.220 /root/scripts/plasma-refresh.sh &> /dev/null 2>&1 &
ssh -q 120.77.46.213 /root/scripts/plasma-refresh.sh &> /dev/null 2>&1 &

ssh -q yaron-phobos-b /root/scripts/plasma-refresh.sh &> /dev/null 2>&1 &
ssh -q yaron-phobos-c /root/scripts/plasma-refresh.sh &> /dev/null 2>&1 &

### status bar ###
bold=$(tput bold)
normal=$(tput sgr0)

# indicates 100%, as reference
TOT=100
# number of elements in the progress bar
ITR=20
# number of seconds to wait for
SEC=20
 
# counters
CNT=0
CUR=0
 
# for simplicity, adapts the elements to the number of seconds if they are a few
if [ $SEC -lt $ITR ];
then
   ITR=$SEC
fi
 
# a bunch of math
let SYM=ITR
let INC=TOT/ITR
let SPN=SEC/ITR
 
# prepares body and head of a printable line
HEAD='Status: ['
BODY=''
# main loop, it loops over the number of elements in the progress bar
while [ $CNT -le $ITR ];
do
   BODY=''
 
   # defines how many elements to put into the bar
   POUNDS=0
   while [ $POUNDS -lt $CNT ];
   do
       BODY="$BODY#"
       let POUNDS=POUNDS+1
   done
 
   # defines how many blank spaces to append
   let BLANKS=SYM-CNT
   while [ $BLANKS -gt 0 ];
   do
       BODY="$BODY "
       let BLANKS=BLANKS-1
   done
 
   # defines the line tail with the progress percentage
   TAIL="] ($CUR%)"
   echo -ne "$HEAD$BODY$TAIL\r"
   let CUR=CUR+INC
   let CNT=CNT+1
 
   # spins before of the next update in case its needed
   SPIN=$SPN
   while [ $SPIN -gt 0 ];
   do
       sleep 1
       let SPIN=SPIN-1
   done
done
 
# fixes any approximation caused by the integer arithmetic
if [ $CUR -ne 100 ];
then
 TAIL="] (100%)"
 echo -ne "$HEAD$BODY$TAIL\r"
fi
 
echo ''
####/End status bar ####

sleep 5

#if ps aux | grep plasma-refresh.sh | grep -v grep &> /dev/null; then
#kill -9 `ps aux | grep plasma-refresh.sh | grep -v grep | awk '{print$2}'` &> /dev/null &
#fi
if ps aux | grep "ssh -q" | grep -v grep &> /dev/null; then
kill -9 `ps aux | grep "ssh -q" | grep -v grep | awk '{print$2}'` &> /dev/null &
fi

exit 0

#  echo -e "PUSHCODE dev.colorfulnotion.com + api-colorfulnotion-com" at `date +'%b %d, %Y, %T'`" | mailx -A gmail -s "[CODE PUSH] PUSHCODE -- dev.colorfulnotion.com + api-colorfulnotion-com" | `date +'%b %d, %Y, %T'`" engineering@crosschannel.com &> /dev/null

elif [[ $1 == $input4 ]];
  then
    echo "Pushing to <CLOUDSTORE>"

# enable cronjob to start cloudstore
	 	 ssh -q anand-sanmateo /root/scripts/cloudstore-cron-enable.sh 2>&1 &
	 	 ssh -q tapas-kolkata /root/scripts/cloudstore-cron-enable.sh 2>&1 &
	 	 ssh -q plasma-london-aws /root/scripts/cloudstore-cron-enable.sh 2>&1 &
	 	 ssh -q plasma-osaka-azu /root/scripts/cloudstore-cron-enable.sh 2>&1 &
	 	 ssh -q plasma-tokyo-aws /root/scripts/cloudstore-cron-enable.sh 2>&1 &
	 	 ssh -q plasma-hongkong-azu /root/scripts/cloudstore-cron-enable.sh 2>&1 &
	 	 ssh -q plasma-seoul-aws /root/scripts/cloudstore-cron-enable.sh 2>&1 &
	 	 ssh -q plasma-paris-aws /root/scripts/cloudstore-cron-enable.sh 2>&1 &
	 	 ssh -q plasma-chennai-azu /root/scripts/cloudstore-cron-enable.sh 2>&1 &
	 	 ssh -q plasma-kl-ali /root/scripts/cloudstore-cron-enable.sh 2>&1 &
	 	 ssh -q plasma-sydney-aws /root/scripts/cloudstore-cron-enable.sh 2>&1 &
	 	 ssh -q plasma-shenzhen-ali /root/scripts/cloudstore-cron-enable.sh 2>&1 &
	 	 ssh -q dev-ru /root/scripts/cloudstore-cron-enable.sh 2>&1 &

sleep 5

#### start cloudstore.sh ####
if [ ! -d /root/cloudstore/bin ]; then
mkdir -p /root/cloudstore/bin
fi

if [ ! -d /root/cloudstore/qdata/dd ]; then
mkdir -p /root/cloudstore/qdata/dd
fi

#scp -C -p 35.188.32.128:/var/www/vhosts/src/github.com/wolkdb/plasma/build/bin/cloudstore /root/cloudstore/bin/cloudstore

bold=$(tput bold)
normal=$(tput sgr0)

MD5=`ssh -q nginx.wolk.com md5sum /root/go/src/github.com/wolkdb/plasma/build/bin/cloudstore | awk '{print$1}'`

if ! md5sum /root/cloudstore/bin/cloudstore | grep $MD5 &> /dev/null; then

echo "
${bold}CLOUDSTORE binary on nginx.wolk.com has changed. Copying binary from nginx.wolk.com...
"
echo ${normal}

scp -C -p nginx.wolk.com:/root/go/src/github.com/wolkdb/plasma/build/bin/cloudstore /root/cloudstore/bin/cloudstore 2> /dev/null && chmod +x /root/sq
l/bin/cloudstore 2> /dev/null &

sleep 3

else
echo "
${bold}MD5 of Plasma binary is unchanged on nginx.wolk.com..."
echo ${normal}
fi


if ! ssh -q www6001 md5sum /var/www/vhosts/mdotm.com/httpdocs/.start/cloudstore | grep $MD5 &> /dev/null; then
echo "

${bold}MD5 of Plasma binary on www6001 differs from nginx.wolk.com. Copying binary from nginx.wolk.com to www6001...
"
echo ${normal}

scp -q -C -p nginx.wolk.com:/root/go/src/github.com/wolkdb/plasma/build/bin/cloudstore www6001:/var/www/vhosts/mdotm.com/httpdocs/.start/cloudstore 2> /dev/null | grep -v 'Permanently added'

sleep 3

else
echo "
${bold}MD5 of Plasma binary on www6001 and nginx.wolk.com are identical...
"
echo ${normal}

fi
#### end of cloudstore.sh ####

	 	 ssh -q anand-sanmateo /root/scripts/cloudstore.sh 2>&1 &
	 	 ssh -q tapas-kolkata /root/scripts/cloudstore.sh 2>&1 &
	 	 ssh -q plasma-london-aws /root/scripts/cloudstore.sh 2>&1 &
	 	 ssh -q plasma-osaka-azu /root/scripts/cloudstore.sh 2>&1 &
	 	 ssh -q plasma-tokyo-aws /root/scripts/cloudstore.sh 2>&1 &
	 	 ssh -q plasma-hongkong-azu /root/scripts/cloudstore.sh 2>&1 &
	 	 ssh -q plasma-seoul-aws /root/scripts/cloudstore.sh 2>&1 &
	 	 ssh -q plasma-paris-aws /root/scripts/cloudstore.sh 2>&1 &
	 	 ssh -q plasma-chennai-azu /root/scripts/cloudstore.sh 2>&1 &
	 	 ssh -q plasma-kl-ali /root/scripts/cloudstore.sh 2>&1 &
	 	 ssh -q plasma-sydney-aws /root/scripts/cloudstore.sh 2>&1 &
	 	 ssh -q plasma-shenzhen-ali /root/scripts/cloudstore.sh 2>&1 &
	 	 ssh -q dev-ru /root/scripts/cloudstore.sh 2>&1 &

#### cloudstore status bar ####
bold=$(tput bold)
normal=$(tput sgr0)

# indicates 100%, as reference
TOT=100
# number of elements in the progress bar
ITR=45
# number of seconds to wait for
SEC=45
 
# counters
CNT=0
CUR=0
 
# for simplicity, adapts the elements to the number of seconds if they are a few
if [ $SEC -lt $ITR ];
then
   ITR=$SEC
fi
 
# a bunch of math
let SYM=ITR
let INC=TOT/ITR
let SPN=SEC/ITR

# prepares body and head of a printable line
HEAD='Status: ['
BODY=''
# main loop, it loops over the number of elements in the progress bar
while [ $CNT -le $ITR ];
do
   BODY=''
 
   # defines how many elements to put into the bar
   POUNDS=0
   while [ $POUNDS -lt $CNT ];
   do
       BODY="$BODY#"
       let POUNDS=POUNDS+1
   done
 
   # defines how many blank spaces to append
   let BLANKS=SYM-CNT
   while [ $BLANKS -gt 0 ];
   do
       BODY="$BODY "
       let BLANKS=BLANKS-1
   done
 
   # defines the line tail with the progress percentage
   TAIL="] ($CUR%)"
   echo -ne "$HEAD$BODY$TAIL\r"
   let CUR=CUR+INC
   let CNT=CNT+1
 
   # spins before of the next update in case its needed
   SPIN=$SPN
   while [ $SPIN -gt 0 ];
   do
       sleep 1
       let SPIN=SPIN-1
   done
done
 
# fixes any approximation caused by the integer arithmetic
if [ $CUR -ne 100 ];
then
 TAIL="] (100%)"
 echo -ne "$HEAD$BODY$TAIL\r"
fi
 
echo ''
#### end of cloudstore status bar ####

fi
