#!/bin/bash

input1="sql"
input2="nosql"
input3="plasma"
input4="cloudstore"
input5="sql2"
input6="sqlpoa"
input7="nosqlpoa"

if [ -z $1 ]
  then
    echo "
           Usage: 
                 \"pushcode <sql>\" 	--> plasma-dubai-ali
					--> plasma-netherlands-azu
					--> plasma-saopaulo-aws
					--> plasma-singapore-aws
					--> plasma-victoria-azu
					--> plasma-shanghai-ali

                 \"pushcode <nosql>\" --> plasma-frankfurt-aws
					--> plasma-ireland-azu
					--> plasma-jakarta-ali
					--> plasma-mumbai-aws
					--> plasma-quebec-azu
					--> plasma-beijing-ali

                 \"pushcode <plasma>\" --> anand-sanmateo
					--> tapas-kolkata
					--> plasma-london-aws
					--> plasma-singapore-ali
					--> plasma-osaka-azu
					--> plasma-tokyo-aws
					--> plasma-hongkong-azu
					--> plasma-seoul-aws
					--> plasma-paris-aws
					--> plasma-chennai-azu
					--> plasma-kl-ali
					--> plasma-sydney-aws
					--> plasma-beijing-ali
					--> dev-ru

                 \"pushcode <cloudstore>\" --> anand-sanmateo
	 	 	 	 	 --> tapas-kolkata
	 	 	 	 	 --> plasma-london-aws
	 	 	 	 	 --> plasma-osaka-azu
	 	 	 	 	 --> plasma-tokyo-aws
	 	 	 	 	 --> plasma-hongkong-azu
	 	 	 	 	 --> plasma-seoul-aws
	 	 	 	 	 --> plasma-paris-aws
	 	 	 	 	 --> plasma-chennai-azu
	 	 	 	 	 --> plasma-kl-ali
	 	 	 	 	 --> plasma-sydney-aws
					 --> plasma-shenzhen-ali
	 	 	 	 	 --> dev-ru
"
fi

bold=$(tput bold)
normal=$(tput sgr0)

if [[ $1 == $input1 ]];
  then
    echo "
${bold}Preparing to Push [SQL]"

echo ${normal}

#### start of sql ####
# compile sql

cd /root/go/src/github.com/wolkdb/plasma;
git fetch &> /dev/null
LOCAL=$(git rev-parse @{0})
REMOTE=$(git rev-parse @{u})
BASE=$(git merge-base @{0} @{u})

if [ $LOCAL = $REMOTE ]; then
 echo "${bold}[`date +'%b %d, %Y, %T'`] - Branch is up-to-date...
"
else
echo -ne "${bold}Running git fetch/merge on the plasma repository...\n
"
 git fetch origin &> /dev/null &

echo ${normal}

echo -ne '[######                                                          ](10%)\r'
sleep 5
echo -ne '[############                                                    ](20%)\r'
sleep 5
echo -ne '[##################                                              ](30%)\r'
sleep 5
echo -ne '[##########################                                      ](40%)\r'
sleep 5
echo -ne '[################################                                ](50%)\r'

 git merge origin/master &> /dev/null &

sleep 5
echo -ne '[###################################                             ](60%)\r'
sleep 5
echo -ne '[#########################################                       ](70%)\r'
sleep 5
echo -ne '[#################################################               ](80%)\r'
sleep 5
echo -ne '[#######################################################         ](90%)\r'
sleep 5
echo -ne '[############################################################### ](100%)\r'
echo -ne '\n'
fi

make sql &> /dev/null &
echo -ne "${bold}Compiling the SQL binary\n"
echo ${normal}

echo -ne '[######                                                          ](10%)\r'
sleep 5
echo -ne '[############                                                    ](20%)\r'
sleep 5
echo -ne '[##################                                              ](30%)\r'
sleep 5
echo -ne '[##########################                                      ](40%)\r'
sleep 5
echo -ne '[################################                                ](50%)\r'
sleep 5
echo -ne '[###################################                             ](60%)\r'
sleep 5
echo -ne '[#########################################                       ](70%)\r'
sleep 5
echo -ne '[#################################################               ](80%)\r'
sleep 5
echo -ne '[#######################################################         ](90%)\r'
sleep 5
echo -ne '[############################################################### ](100%)\r'
echo -ne '\n'
# /end sql binary compilation

#### sql MD5 check ####
bold=$(tput bold)
normal=$(tput sgr0)

MD5=`md5sum /root/go/src/github.com/wolkdb/plasma/build/bin/sql | awk '{print$1}'`

if ! md5sum /root/sql/bin/sql | grep $MD5 &> /dev/null; then

echo "
${bold}SQL binary on cloudstore.wolk.com has changed. Copying binary from cloudstore.wolk.com and www6001..."

echo ${normal}

"yes" | cp -rf /root/go/src/github.com/wolkdb/plasma/build/bin/sql /root/sql/bin/ &> /dev/null
"yes" | cp -rf /root/go/src/github.com/wolkdb/plasma/build/bin/sql /var/www/vhosts/docker/docker/sql-docker/sql/bin/sql &> /dev/null

else
echo "
${bold}MD5 of SQL binary is unchanged on cloudstore.wolk.com..."
echo ${normal}
fi

if ! ssh -q www6001 md5sum /var/www/vhosts/mdotm.com/httpdocs/.start/sql | grep $MD5 &> /dev/null; then
echo "

${bold}MD5 of SQL binary on www6001 differs from cloudstore.wolk.com. Copying binary from cloudstore.wolk.com to www6001...
"
echo ${normal}

scp -q -C -p /root/go/src/github.com/wolkdb/plasma/build/bin/sql www6001:/var/www/vhosts/mdotm.com/httpdocs/.start/sql 2> /dev/null | grep -v 'Permanently added'

else
echo "${bold}MD5 of SQL binary on www6001 and cloudstore.wolk.com are identical..."
echo ${normal}

fi
#### end of sql MD5 check ####

# copy sql binary
bold=$(tput bold)
normal=$(tput sgr0)

# pushing the sql scripts to all the boxes before restarting sql
cat /tmp/sql | awk '{print"scp -C -p /root/scripts/plasma/sql/*.sh",$1":/root/scripts/ 2>&1 &"}' > /tmp/scp-sql-scripts.sh && sh /tmp/scp-sql-scripts.sh &> /dev/null

# restarting sql
cat /tmp/sql | awk '{print"ssh -q",$1,"/root/scripts/sql-restart.sh 2>&1 &"}' > /tmp/exec-sql-restart.sh && sh /tmp/exec-sql-restart.sh &> /dev/null &

echo -ne "${bold}Restarting SQL on all the nodes...\n"
echo ${normal}

echo -ne '[######                                                          ](10%)\r'
sleep 5
echo -ne '[############                                                    ](20%)\r'
sleep 5
echo -ne '[##################                                              ](30%)\r'
sleep 5
echo -ne '[##########################                                      ](40%)\r'
sleep 5
echo -ne '[################################                                ](50%)\r'
sleep 5
echo -ne '[###################################                             ](60%)\r'
sleep 5
echo -ne '[#########################################                       ](70%)\r'
sleep 5
echo -ne '[#################################################               ](80%)\r'
sleep 5
echo -ne '[#######################################################         ](90%)\r'
sleep 5
echo -ne '[############################################################### ](100%)\r'
echo -ne '\n'

echo ${normal}
#### end of SQL ####

#    echo -e "PUSHCODE api --> api-colorfulnotion-com --project colorfulnotion-1307 at `date +'%b %d, %Y, %T'`" | mailx -A gmail -s "[CODE PUSH] PUSHCODE -- api --> api-colorfulnotion-com --project colorfulnotion-1307 | `date +'%b %d, %Y, %T'`" engineering@crosschannel.com &> /dev/null

bold=$(tput bold)
normal=$(tput sgr0)

elif [[ $1 == $input2 ]];
  then
    echo "
${bold}Preparing to Push [NOSQL]"

echo ${normal}

# compile nosql

cd /root/go/src/github.com/wolkdb/plasma;
git fetch &> /dev/null
LOCAL=$(git rev-parse @{0})
REMOTE=$(git rev-parse @{u})
BASE=$(git merge-base @{0} @{u})

if [ $LOCAL = $REMOTE ]; then
 echo "${bold}[`date +'%b %d, %Y, %T'`] - Branch is up-to-date...
"
else
# echo "`date +'%b %d, %Y, %T'` - updating"
echo -ne "${bold}Running git fetch/merge on the plasma repository...\n
"
 git fetch origin &> /dev/null &

echo ${normal}

echo -ne '[######                                                          ](10%)\r'
sleep 5
echo -ne '[############                                                    ](20%)\r'
sleep 5
echo -ne '[##################                                              ](30%)\r'
sleep 5
echo -ne '[##########################                                      ](40%)\r'
sleep 5
echo -ne '[################################                                ](50%)\r'

 git merge origin/master &> /dev/null &

sleep 5
echo -ne '[###################################                             ](60%)\r'
sleep 5
echo -ne '[#########################################                       ](70%)\r'
sleep 5
echo -ne '[#################################################               ](80%)\r'
sleep 5
echo -ne '[#######################################################         ](90%)\r'
sleep 5
echo -ne '[############################################################### ](100%)\r'
echo -ne '\n'
fi

make nosql &> /dev/null &
echo -ne "${bold}Compiling the NOSQL binary\n"
echo ${normal}

echo -ne '[######                                                          ](10%)\r'
sleep 5
echo -ne '[############                                                    ](20%)\r'
sleep 5
echo -ne '[##################                                              ](30%)\r'
sleep 5
echo -ne '[##########################                                      ](40%)\r'
sleep 5
echo -ne '[################################                                ](50%)\r'
sleep 5
echo -ne '[###################################                             ](60%)\r'
sleep 5
echo -ne '[#########################################                       ](70%)\r'
sleep 5
echo -ne '[#################################################               ](80%)\r'
sleep 5
echo -ne '[#######################################################         ](90%)\r'
sleep 5
echo -ne '[############################################################### ](100%)\r'
echo -ne '\n'

#### nosql MD5 check ####
bold=$(tput bold)
normal=$(tput sgr0)

MD5=`md5sum /root/go/src/github.com/wolkdb/plasma/build/bin/nosql | awk '{print$1}'`

if ! md5sum /root/nosql/bin/nosql | grep $MD5 &> /dev/null; then

echo "
${bold}NOSQL binary on cloudstore.wolk.com has changed. Copying binary from cloudstore.wolk.com to /root/nosql/bin and www6001...
"
echo ${normal}

"yes" | cp -rf /root/go/src/github.com/wolkdb/plasma/build/bin/nosql /root/nosql/bin/nosql &> /dev/null
scp -q -C -p /root/go/src/github.com/wolkdb/plasma/build/bin/nosql www6001:/var/www/vhosts/mdotm.com/httpdocs/.start/nosql 2> /dev/null | grep -v 'Permanently added'

else
echo "
${bold}MD5 of NOSQL binary is unchanged on www6001..."
echo ${normal}
fi
#### end of nosql MD5 check ####

# copy nosql binary
bold=$(tput bold)
normal=$(tput sgr0)

# pushing the nosql scripts to all the boxes before trying to start nosql
cat /tmp/nosql | awk '{print"scp -C -p /root/scripts/plasma/nosql/*.sh",$1":/root/scripts/ 2>&1 &"}' > /tmp/scp-nosql-scripts.sh && sh /tmp/scp-nosql-scripts.sh &> /dev/null

# restarting nosql
cat /tmp/nosql | awk '{print"ssh -q",$1,"/root/scripts/nosql-restart.sh 2>&1 &"}' > /tmp/exec-nosql-restart.sh && sh /tmp/exec-nosql-restart.sh &> /dev/null &

echo -ne "${bold}Restarting NOSQL on all the nodes...\n"
echo ${normal}

echo -ne '[######                                                          ](10%)\r'
sleep 5
echo -ne '[############                                                    ](20%)\r'
sleep 5
echo -ne '[##################                                              ](30%)\r'
sleep 5
echo -ne '[##########################                                      ](40%)\r'
sleep 5
echo -ne '[################################                                ](50%)\r'
sleep 5
echo -ne '[###################################                             ](60%)\r'
sleep 5
echo -ne '[#########################################                       ](70%)\r'
sleep 5
echo -ne '[#################################################               ](80%)\r'
sleep 5
echo -ne '[#######################################################         ](90%)\r'
sleep 5
echo -ne '[############################################################### ](100%)\r'
echo -ne '\n'

echo ${normal}
#### end of NOSQL ####

#   echo -e "PUSHCODE dev --> dev.colorfulnotion.com at `date +'%b %d, %Y, %T'`" | mailx -A gmail -s "[CODE PUSH] PUSHCODE -- api --> sourabh.crosschannel.com | `date +'%b %d, %Y, %T'`" engineering@crosschannel.com &> /dev/null

elif [[ $1 == $input3 ]];
  then
    echo "
${bold}Preparing to Push [PLASMA]"

echo ${normal}

# compile plasma

cd /root/go/src/github.com/wolkdb/plasma;
git fetch &> /dev/null
LOCAL=$(git rev-parse @{0})
REMOTE=$(git rev-parse @{u})
BASE=$(git merge-base @{0} @{u})

if [ $LOCAL = $REMOTE ]; then
 echo "${bold}[`date +'%b %d, %Y, %T'`] - Branch is up-to-date...
"
else
# echo "`date +'%b %d, %Y, %T'` - updating"
echo -ne "${bold}Running git fetch/merge on the plasma repository...\n
"
 git fetch origin &> /dev/null &

echo ${normal}

echo -ne '[######                                                          ](10%)\r'
sleep 5
echo -ne '[############                                                    ](20%)\r'
sleep 5
echo -ne '[##################                                              ](30%)\r'
sleep 5
echo -ne '[##########################                                      ](40%)\r'
sleep 5
echo -ne '[################################                                ](50%)\r'

 git merge origin/master &> /dev/null &

sleep 5
echo -ne '[###################################                             ](60%)\r'
sleep 5
echo -ne '[#########################################                       ](70%)\r'
sleep 5
echo -ne '[#################################################               ](80%)\r'
sleep 5
echo -ne '[#######################################################         ](90%)\r'
sleep 5
echo -ne '[############################################################### ](100%)\r'
echo -ne '\n'
fi

make plasma &> /dev/null &
echo -ne "${bold}Compiling the PLASMA binary\n"
echo ${normal}

echo -ne '[######                                                          ](10%)\r'
sleep 5
echo -ne '[############                                                    ](20%)\r'
sleep 5
echo -ne '[##################                                              ](30%)\r'
sleep 5
echo -ne '[##########################                                      ](40%)\r'
sleep 5
echo -ne '[################################                                ](50%)\r'
sleep 5
echo -ne '[###################################                             ](60%)\r'
sleep 5
echo -ne '[#########################################                       ](70%)\r'
sleep 5
echo -ne '[#################################################               ](80%)\r'
sleep 5
echo -ne '[#######################################################         ](90%)\r'
sleep 5
echo -ne '[############################################################### ](100%)\r'
echo -ne '\n'

#### plasma MD5 check ####
bold=$(tput bold)
normal=$(tput sgr0)

MD5=`md5sum /root/go/src/github.com/wolkdb/plasma/build/bin/plasma | awk '{print$1}'`

if ! md5sum /root/plasma/bin/plasma | grep $MD5 &> /dev/null; then

echo "
${bold}PLASMA binary on cloudstore.wolk.com has changed. Copying binary from cloudstore.wolk.com to /root/plasma/bin and www6001...
"
echo ${normal}

"yes" | cp -rf /root/go/src/github.com/wolkdb/plasma/build/bin/plasma /root/plasma/bin/plasma &> /dev/null
scp -q -C -p /root/go/src/github.com/wolkdb/plasma/build/bin/plasma www6001:/var/www/vhosts/mdotm.com/httpdocs/.start/plasma 2> /dev/null | grep -v 'Permanently added'

else
echo "
${bold}MD5 of PLASMA binary is unchanged on www6001..."
echo ${normal}
fi
#### end of plasma MD5 check ####

# copy plasma binary
bold=$(tput bold)
normal=$(tput sgr0)

# pushing the plasma scripts to all the boxes before trying to start plasma
cat /tmp/plasma | awk '{print"scp -C -p /root/scripts/plasma/plasma/*.sh",$1":/root/scripts/ 2>&1 &"}' > /tmp/scp-plasma-scripts.sh && sh /tmp/scp-plasma-scripts.sh &> /dev/null

# restarting plasma
cat /tmp/plasma | awk '{print"ssh -q",$1,"/root/scripts/plasma-restart.sh 2>&1 &"}' > /tmp/exec-plasma-restart.sh && sh /tmp/exec-plasma-restart.sh &> /dev/null &

echo -ne "${bold}Restarting PLASMA on all the nodes...\n"
echo ${normal}

echo -ne '[######                                                          ](10%)\r'
sleep 10
echo -ne '[############                                                    ](20%)\r'
sleep 10
echo -ne '[##################                                              ](30%)\r'
sleep 10
echo -ne '[##########################                                      ](40%)\r'
sleep 10
echo -ne '[################################                                ](50%)\r'
sleep 10
echo -ne '[###################################                             ](60%)\r'
sleep 10
echo -ne '[#########################################                       ](70%)\r'
sleep 10
echo -ne '[#################################################               ](80%)\r'
sleep 10
echo -ne '[#######################################################         ](90%)\r'
sleep 10
echo -ne '[############################################################### ](100%)\r'
echo -ne '\n'

echo ${normal}
#### end of PLASMA ####

#  echo -e "PUSHCODE dev.colorfulnotion.com + api-colorfulnotion-com" at `date +'%b %d, %Y, %T'`" | mailx -A gmail -s "[CODE PUSH] PUSHCODE -- dev.colorfulnotion.com + api-colorfulnotion-com" | `date +'%b %d, %Y, %T'`" engineering@crosschannel.com &> /dev/null

elif [[ $1 == $input4 ]];
  then
    echo "Preparing to push to [CLOUDSTORE]"

# compile cloudstore

cd /root/go/src/github.com/wolkdb/plasma;
git fetch &> /dev/null
LOCAL=$(git rev-parse @{0})
REMOTE=$(git rev-parse @{u})
BASE=$(git merge-base @{0} @{u})

if [ $LOCAL = $REMOTE ]; then
 echo "
`date +'%b %d, %Y, %T'` - Branch is up-to-date... No need for fetch/merge. 
"
else
# echo "`date +'%b %d, %Y, %T'` - updating"
echo -ne '
Running git fetch/merge on the plasma repository...\n
'
 git fetch origin &> /dev/null &
echo -ne '[######                                                          ](10%)\r'
sleep 5
echo -ne '[############                                                    ](20%)\r'
sleep 5
echo -ne '[##################                                              ](30%)\r'
sleep 5
echo -ne '[##########################                                      ](40%)\r'
sleep 5
echo -ne '[################################                                ](50%)\r'
 git merge origin/master &> /dev/null &
# echo "done"
echo -ne '[################################                                ](50%)\r'
sleep 5
echo -ne '[###################################                             ](60%)\r'
sleep 5
echo -ne '[#########################################                       ](70%)\r'
sleep 5
echo -ne '[#################################################               ](80%)\r'
sleep 5
echo -ne '[#######################################################         ](90%)\r'
sleep 5
echo -ne '[############################################################### ](100%)\r'
echo -ne '\n'
fi

echo -ne '
Compiling the CLOUDSTORE binary\n
'
make cloudstore &> /dev/null &
echo -ne '[######                                                          ](10%)\r'
sleep 10
echo -ne '[############                                                    ](20%)\r'
sleep 5
echo -ne '[##################                                              ](30%)\r'
sleep 5
echo -ne '[##########################                                      ](40%)\r'
sleep 5
echo -ne '[################################                                ](50%)\r'
sleep 5
echo -ne '[###################################                             ](60%)\r'
sleep 5
echo -ne '[#########################################                       ](70%)\r'
sleep 5
echo -ne '[#################################################               ](80%)\r'
sleep 5
echo -ne '[#######################################################         ](90%)\r'
sleep 5
echo -ne '[############################################################### ](100%)\r'
echo -ne '\n'

#### cloudstore MD5 check ####
bold=$(tput bold)
normal=$(tput sgr0)

MD5=`md5sum /root/go/src/github.com/wolkdb/plasma/build/bin/cloudstore | awk '{print$1}'`

if ! md5sum /root/cloudstore/bin/cloudstore | grep $MD5 &> /dev/null; then

echo "
${bold}CLOUDSTORE binary on cloudstore.wolk.com has changed. Copying binary from cloudstore.wolk.com...
"
echo ${normal}

"yes" | cp -rf /root/go/src/github.com/wolkdb/plasma/build/bin/cloudstore /root/cloudstore/bin/cloudstore &> /dev/null

else
echo "
${bold}MD5 of CLOUDSTORE binary is unchanged on cloudstore.wolk.com..."
echo ${normal}
fi


if ! ssh -q www6001 md5sum /var/www/vhosts/mdotm.com/httpdocs/.start/cloudstore | grep $MD5 &> /dev/null; then
echo "
${bold}MD5 of CLOUDSTORE binary on www6001 differs from cloudstore.wolk.com. Copying binary from cloudstore.wolk.com to www6001...
"
echo ${normal}

scp -q -C -p cloudstore.wolk.com:/root/go/src/github.com/wolkdb/plasma/build/bin/cloudstore www6001:/var/www/vhosts/mdotm.com/httpdocs/.start/cloudstore 2> /dev/null | grep -v 'Permanently added'

else
echo "
${bold}MD5 of CLOUDSTORE binary on www6001 and cloudstore.wolk.com are identical...
"
echo ${normal}

fi
#### cloudstore MD5 ####

#### Start cloudstore on all instances ####
echo -ne '
Restarting cloudstore on all the instances with new binary...\n
'
cat /tmp/cloudstore | awk '{print"ssh -q",$1,"/root/scripts/cloudstore-restart.sh 2>&1 &"}' > /tmp/exec-cloudstore-restart.sh && sh /tmp/exec-cloudstore-restart.sh &> /dev/null &
echo -ne '[######                                                          ](10%)\r'
sleep 10
echo -ne '[############                                                    ](20%)\r'
sleep 5
echo -ne '[##################                                              ](30%)\r'
sleep 5
echo -ne '[##########################                                      ](40%)\r'
sleep 5
echo -ne '[################################                                ](50%)\r'
sleep 5
echo -ne '[###################################                             ](60%)\r'
sleep 5
echo -ne '[#########################################                       ](70%)\r'
sleep 5
echo -ne '[#################################################               ](80%)\r'
sleep 5
echo -ne '[#######################################################         ](90%)\r'
sleep 5
echo -ne '[############################################################### ](100%)\r'
echo -ne '\n'

#### end of cloudstore ####

#### start of sql2 pushcode ####
elif [[ $1 == $input5 ]];
  then
    echo "
${bold}Preparing to Push [SQL2]"

echo ${normal}

# enable cronjob to start sql2
	 	 ssh -q plasma-frankfurt-aws /root/scripts/sql-cron-enable.sh 2>&1 &
	 	 ssh -q plasma-ireland-azu /root/scripts/sql-cron-enable.sh 2>&1 &
	 	 ssh -q plasma-jakarta-ali /root/scripts/sql-cron-enable.sh 2>&1 &
	 	 ssh -q plasma-mumbai-aws /root/scripts/sql-cron-enable.sh 2>&1 &
	 	 ssh -q plasma-quebec-azu /root/scripts/sql-cron-enable.sh 2>&1 &
	 	 ssh -q plasma-beijing-ali /root/scripts/sql-cron-enable.sh 2>&1 &

sleep 5

#### start sql2.sh ####
if [ ! -d /root/sql/bin ]; then
mkdir -p /root/sql/bin
fi

if [ ! -d /root/sql/qdata/dd ]; then
mkdir -p /root/sql/qdata/dd
fi

# compile sql2

cd /root/go/src/github.com/wolkdb/plasma;
git fetch &> /dev/null
LOCAL=$(git rev-parse @{0})
REMOTE=$(git rev-parse @{u})
BASE=$(git merge-base @{0} @{u})

if [ $LOCAL = $REMOTE ]; then
 echo "
`date +'%b %d, %Y, %T'` - Branch is up-to-date... No need for fetch/merge recompiling sql...
"
else
 echo "`date +'%b %d, %Y, %T'` - updating"
 git fetch origin &> /dev/null;
 git merge origin/master &> /dev/null &
 echo "done"
echo -ne 'Running git fetch/merge on the plasma repository...\n
'
sleep 5
echo -ne '[######                                  ](20%)\r'
sleep 5
echo -ne '[##############                          ](40%)\r'
sleep 5
echo -ne '[#######################                 ](60%)\r'
sleep 5
echo -ne '[###############################         ](80%)\r'
sleep 5
echo -ne '[####################################### ](100%)\r'
echo -ne '\n'

make sql &> /dev/null &
echo -ne '
Compiling the SQL2 binary\n
'
sleep 5
echo -ne '[######                                 ](20%)\r'
sleep 5
echo -ne '[##############                          ](40%)\r'
sleep 5
echo -ne '[#######################                 ](60%)\r'
sleep 5
echo -ne '[###############################         ](80%)\r'
sleep 5
echo -ne '[####################################### ](100%)\r'
echo -ne '\n'

"yes" | cp -rf /root/go/src/github.com/wolkdb/plasma/build/bin/sql /root/sql/bin &> /dev/null
fi

# killing sql2 if its already running
cat /tmp/sql2 | awk '{print"ssh -q",$1,"pkill -9 sql 2>&1 &"}' > /tmp/kill-sql.sh && sh /tmp/kill-sql.sh &> /dev/null &
cat /tmp/sql2 | awk '{print"ssh -q",$1,"sh /root/scripts/kill-sql-scripts.sh 2>&1 &"}' > /tmp/exec-kill-sql-scripts.sh &> /dev/null &
echo -ne '
Killing all sql2 processes before restarting...\n
'
sleep 5
echo -ne '[######                                  ](20%)\r'
sleep 5
echo -ne '[##############                          ](40%)\r'
sleep 5
echo -ne '[#######################                 ](60%)\r'
sleep 5
echo -ne '[###############################         ](80%)\r'
sleep 5
echo -ne '[####################################### ](100%)\r'
echo -ne '\n'

# copy sql2 binary
cat /tmp/sql2 | awk '{print"scp -q -C -p /root/sql/bin/sql",$1":/root/sql/bin/ 2>&1 &"}' > /tmp/scp-sql-bin.sh && sh /tmp/scp-sql-bin.sh &> /dev/null &
echo -ne '
Copying sql binary to all the instances...\n
'
echo -ne '[######                                                          ](10%)\r'
sleep 5
echo -ne '[############                                                    ](20%)\r'
sleep 5
echo -ne '[##################                                              ](30%)\r'
sleep 5
echo -ne '[##########################                                      ](40%)\r'
sleep 5
echo -ne '[################################                                ](50%)\r'
sleep 5
echo -ne '[###################################                             ](60%)\r'
sleep 5
echo -ne '[#########################################                       ](70%)\r'
sleep 5
echo -ne '[#################################################               ](80%)\r'
sleep 5
echo -ne '[#######################################################         ](90%)\r'
sleep 5
echo -ne '[############################################################### ](100%)\r'
echo -ne '\n'
# /end sql2 binary compilation

bold=$(tput bold)
normal=$(tput sgr0)

MD5=`ssh -q cloudstore.wolk.com md5sum /root/go/src/github.com/wolkdb/plasma/build/bin/sql | awk '{print$1}'`

if ! md5sum /root/sql/bin/sql | grep $MD5 &> /dev/null; then

echo "
${bold}SQL binary on cloudstore.wolk.com has changed. Copying binary from cloudstore.wolk.com...
"
echo ${normal}

scp -C -p cloudstore.wolk.com:/root/go/src/github.com/wolkdb/plasma/build/bin/sql /root/sql/bin/sql 2> /dev/null && chmod +x /root/sql/bin/sql 2> /dev/null &

sleep 3

else
echo "
${bold}MD5 of SQL binary is unchanged on cloudstore.wolk.com..."
echo ${normal}
fi


if ! ssh -q www6001 md5sum /var/www/vhosts/mdotm.com/httpdocs/.start/sql | grep $MD5 &> /dev/null; then
echo "${bold}MD5 of SQL binary on www6001 differs from cloudstore.wolk.com. Copying binary from cloudstore.wolk.com to www6001..."
echo ${normal}

scp -q -C -p cloudstore.wolk.com:/root/go/src/github.com/wolkdb/plasma/build/bin/sql www6001:/var/www/vhosts/mdotm.com/httpdocs/.start/sql 2> /dev/null | grep -v 'Permanently added'

sleep 3

else
echo "${bold}MD5 of SQL binary on www6001 and cloudstore.wolk.com are identical..."
echo ${normal}

fi
#### end of sql2.sh ####

	 	 ssh -q plasma-frankfurt-aws /root/scripts/sql.sh 2>&1 &
	 	 ssh -q plasma-ireland-azu /root/scripts/sql.sh 2>&1 &
	 	 ssh -q plasma-jakarta-ali /root/scripts/sql.sh 2>&1 &
	 	 ssh -q plasma-mumbai-aws /root/scripts/sql.sh 2>&1 &
	 	 ssh -q plasma-quebec-azu /root/scripts/sql.sh 2>&1 &
	 	 ssh -q plasma-beijing-ali /root/scripts/sql.sh 2>&1 &

#### status bar ####
bold=$(tput bold)
normal=$(tput sgr0)

# indicates 100%, as reference
TOT=100
# number of elements in the progress bar
ITR=45
# number of seconds to wait for
SEC=45
 
# counters
CNT=0
CUR=0
 
# for simplicity, adapts the elements to the number of seconds if they are a few
if [ $SEC -lt $ITR ];
then
   ITR=$SEC
fi
 
# a bunch of math
let SYM=ITR
let INC=TOT/ITR
let SPN=SEC/ITR
 
# prepares body and head of a printable line
HEAD='Restarting SQL on all the nodes: ['
BODY=''
# main loop, it loops over the number of elements in the progress bar
while [ $CNT -le $ITR ];
do
   BODY=''
 
   # defines how many elements to put into the bar
   POUNDS=0
   while [ $POUNDS -lt $CNT ];
   do
       BODY="$BODY#"
       let POUNDS=POUNDS+1
   done
 
   # defines how many blank spaces to append
   let BLANKS=SYM-CNT
   while [ $BLANKS -gt 0 ];
   do
       BODY="$BODY "
       let BLANKS=BLANKS-1
   done
 
   # defines the line tail with the progress percentage
   TAIL="] ($CUR%)"
   echo -ne "$HEAD$BODY$TAIL\r"
   let CUR=CUR+INC
   let CNT=CNT+1
 
   # spins before of the next update in case its needed
   SPIN=$SPN
   while [ $SPIN -gt 0 ];
   do
       sleep 1
       let SPIN=SPIN-1
   done
done
 
# fixes any approximation caused by the integer arithmetic
if [ $CUR -ne 100 ];
then
 TAIL="] (100%)"
 echo -ne "$HEAD$BODY$TAIL\r"
fi
 
echo ''
#### end of status bar ####
#### /end of sql2 pushcode ####

#### Start of sql-poa ####

elif [[ $1 == $input6 ]];
  then
    echo "
${bold}Preparing to Push [SQL-POA]"

echo ${normal}

# compile sql

cd /root/go/src/github.com/wolkdb/plasma;
git fetch &> /dev/null
LOCAL=$(git rev-parse @{0})
REMOTE=$(git rev-parse @{u})
BASE=$(git merge-base @{0} @{u})

if [ $LOCAL = $REMOTE ]; then
 echo "${bold}[`date +'%b %d, %Y, %T'`] - Branch is up-to-date...
"
else
echo -ne "${bold}Running git fetch/merge on the plasma repository...\n"

git fetch origin &> /dev/null &

echo ${normal}

echo -ne '[######                                                          ](10%)\r'
sleep 5
echo -ne '[############                                                    ](20%)\r'
sleep 5
echo -ne '[##################                                              ](30%)\r'
sleep 5
echo -ne '[##########################                                      ](40%)\r'
sleep 5
echo -ne '[################################                                ](50%)\r'

git merge origin/master &> /dev/null &

sleep 5
echo -ne '[###################################                             ](60%)\r'
sleep 5
echo -ne '[#########################################                       ](70%)\r'
sleep 5
echo -ne '[#################################################               ](80%)\r'
sleep 5
echo -ne '[#######################################################         ](90%)\r'
sleep 5
echo -ne '[############################################################### ](100%)\r'
echo -ne '\n'
fi

make sql &> /dev/null &
echo -ne "
${bold}Compiling the SQL binary\n"
echo ${normal}

echo -ne '[######                                                          ](10%)\r'
sleep 5
echo -ne '[############                                                    ](20%)\r'
sleep 5
echo -ne '[##################                                              ](30%)\r'
sleep 5
echo -ne '[##########################                                      ](40%)\r'
sleep 5
echo -ne '[################################                                ](50%)\r'
sleep 5
echo -ne '[###################################                             ](60%)\r'
sleep 5
echo -ne '[#########################################                       ](70%)\r'
sleep 5
echo -ne '[#################################################               ](80%)\r'
sleep 5
echo -ne '[#######################################################         ](90%)\r'
sleep 5
echo -ne '[############################################################### ](100%)\r'
echo -ne '\n'
# /end sql-poa binary compilation

#### sql MD5 check ####
bold=$(tput bold)
normal=$(tput sgr0)

MD5=`md5sum /root/go/src/github.com/wolkdb/plasma/build/bin/sql | awk '{print$1}'`

if ! md5sum /root/sql/bin/sql | grep $MD5 &> /dev/null; then

echo "
${bold}SQL binary on cloudstore.wolk.com has changed. Copying binary from cloudstore.wolk.com and www6001..."

echo ${normal}

"yes" | cp -rf /root/go/src/github.com/wolkdb/plasma/build/bin/sql /root/sql/bin/ &> /dev/null
"yes" | cp -rf /root/go/src/github.com/wolkdb/plasma/build/bin/sql /var/www/vhosts/docker/docker/sql-docker/sql/bin/sql &> /dev/null

else
echo "
${bold}MD5 of SQL binary is unchanged on cloudstore.wolk.com..."
echo ${normal}
fi

if ! ssh -q www6001 md5sum /var/www/vhosts/mdotm.com/httpdocs/.start/sql | grep $MD5 &> /dev/null; then
echo "

${bold}MD5 of SQL binary on www6001 differs from cloudstore.wolk.com. Copying binary from cloudstore.wolk.com to www6001...
"
echo ${normal}

scp -q -C -p /root/go/src/github.com/wolkdb/plasma/build/bin/sql www6001:/var/www/vhosts/mdotm.com/httpdocs/.start/sql 2> /dev/null | grep -v 'Permanently added'

else
echo "${bold}MD5 of SQL binary on www6001 and cloudstore.wolk.com are identical..."
echo ${normal}

fi
#### end of sql MD5 check ####

# copy sql binary
bold=$(tput bold)
normal=$(tput sgr0)

# pushing the sql-poa scripts to all the boxes before restarting sql-poa
cat /tmp/sql-poa | awk '{print"scp -C -p /root/scripts/plasma/sql-poa/*.sh",$1":/root/scripts/ 2>&1 &"}' > /tmp/scp-sql-poa-scripts.sh && sh /tmp/scp-sql-poa-scripts.sh &> /dev/null

# restarting sql
cat /tmp/sql-poa | awk '{print"ssh -q",$1,"/root/scripts/sql-poa-restart.sh 2>&1 &"}' > /tmp/exec-sql-poa-restart.sh && sh /tmp/exec-sql-poa-restart.sh &> /dev/null &

echo -ne "${bold}Restarting SQL on all the nodes...\n"
echo ${normal}

echo -ne '[######                                                          ](10%)\r'
sleep 5
echo -ne '[############                                                    ](20%)\r'
sleep 5
echo -ne '[##################                                              ](30%)\r'
sleep 5
echo -ne '[##########################                                      ](40%)\r'
sleep 5
echo -ne '[################################                                ](50%)\r'
sleep 5
echo -ne '[###################################                             ](60%)\r'
sleep 5
echo -ne '[#########################################                       ](70%)\r'
sleep 5
echo -ne '[#################################################               ](80%)\r'
sleep 5
echo -ne '[#######################################################         ](90%)\r'
sleep 5
echo -ne '[############################################################### ](100%)\r'
echo -ne '\n'

echo ${normal}
#### end of SQL-POA ####

#### start of NOSQL-POA ####

elif [[ $1 == $input7 ]];
  then
    echo "
${bold}Preparing to Push [NOSQL-POA]"

echo ${normal}

#### start of nosql-poa ####
# compile nosql

cd /root/go/src/github.com/wolkdb/plasma;
git fetch &> /dev/null
LOCAL=$(git rev-parse @{0})
REMOTE=$(git rev-parse @{u})
BASE=$(git merge-base @{0} @{u})

if [ $LOCAL = $REMOTE ]; then
 echo "${bold}[`date +'%b %d, %Y, %T'`] - Branch is up-to-date...
"
else
echo -ne "${bold}Running git fetch/merge on the plasma repository...\n
"
 git fetch origin &> /dev/null &

echo ${normal}

echo -ne '[######                                                          ](10%)\r'
sleep 5
echo -ne '[############                                                    ](20%)\r'
sleep 5
echo -ne '[##################                                              ](30%)\r'
sleep 5
echo -ne '[##########################                                      ](40%)\r'
sleep 5
echo -ne '[################################                                ](50%)\r'

 git merge origin/master &> /dev/null &

sleep 5
echo -ne '[###################################                             ](60%)\r'
sleep 5
echo -ne '[#########################################                       ](70%)\r'
sleep 5
echo -ne '[#################################################               ](80%)\r'
sleep 5
echo -ne '[#######################################################         ](90%)\r'
sleep 5
echo -ne '[############################################################### ](100%)\r'
echo -ne '\n'
fi

make nosql &> /dev/null &
echo -ne "${bold}Compiling the NOSQL binary\n"
echo ${normal}

echo -ne '[######                                                          ](10%)\r'
sleep 5
echo -ne '[############                                                    ](20%)\r'
sleep 5
echo -ne '[##################                                              ](30%)\r'
sleep 5
echo -ne '[##########################                                      ](40%)\r'
sleep 5
echo -ne '[################################                                ](50%)\r'
sleep 5
echo -ne '[###################################                             ](60%)\r'
sleep 5
echo -ne '[#########################################                       ](70%)\r'
sleep 5
echo -ne '[#################################################               ](80%)\r'
sleep 5
echo -ne '[#######################################################         ](90%)\r'
sleep 5
echo -ne '[############################################################### ](100%)\r'
echo -ne '\n'
# /end nosql-poa binary compilation

#### nosql MD5 check ####
bold=$(tput bold)
normal=$(tput sgr0)

MD5=`md5sum /root/go/src/github.com/wolkdb/plasma/build/bin/nosql | awk '{print$1}'`

if ! md5sum /root/nosql/bin/nosql | grep $MD5 &> /dev/null; then

echo "
${bold}NOSQL binary on cloudstore.wolk.com has changed. Copying binary from cloudstore.wolk.com and www6001..."

echo ${normal}

"yes" | cp -rf /root/go/src/github.com/wolkdb/plasma/build/bin/nosql /root/nosql/bin/ &> /dev/null
"yes" | cp -rf /root/go/src/github.com/wolkdb/plasma/build/bin/nosql /var/www/vhosts/docker/docker/nosql-docker/nosql/bin/nosql &> /dev/null

else
echo "
${bold}MD5 of NOSQL binary is unchanged on cloudstore.wolk.com..."
echo ${normal}
fi

if ! ssh -q www6001 md5sum /var/www/vhosts/mdotm.com/httpdocs/.start/nosql | grep $MD5 &> /dev/null; then
echo "

${bold}MD5 of NOSQL binary on www6001 differs from cloudstore.wolk.com. Copying binary from cloudstore.wolk.com to www6001...
"
echo ${normal}

scp -q -C -p /root/go/src/github.com/wolkdb/plasma/build/bin/nosql www6001:/var/www/vhosts/mdotm.com/httpdocs/.start/nosql 2> /dev/null | grep -v 'Permanently added'

else
echo "${bold}MD5 of NOSQL binary on www6001 and cloudstore.wolk.com are identical..."
echo ${normal}

fi
#### end of nosql MD5 check ####

# copy nosql binary
bold=$(tput bold)
normal=$(tput sgr0)

# pushing the nosql-poa scripts to all the boxes before restarting nosql-poa
cat /tmp/nosql-poa | awk '{print"scp -C -p /root/scripts/plasma/nosql-poa/*.sh",$1":/root/scripts/ 2>&1 &"}' > /tmp/scp-nosql-poa-scripts.sh && sh /tmp/scp-nosql-poa-scripts.sh &> /dev/null

# restarting nosql
cat /tmp/nosql-poa | awk '{print"ssh -q",$1,"/root/scripts/nosql-poa-restart.sh 2>&1 &"}' > /tmp/exec-nosql-poa-restart.sh && sh /tmp/exec-nosql-poa-restart.sh &> /dev/null &

echo -ne "${bold}Restarting NOSQL on all the nodes...\n"
echo ${normal}

echo -ne '[######                                                          ](10%)\r'
sleep 5
echo -ne '[############                                                    ](20%)\r'
sleep 5
echo -ne '[##################                                              ](30%)\r'
sleep 5
echo -ne '[##########################                                      ](40%)\r'
sleep 5
echo -ne '[################################                                ](50%)\r'
sleep 5
echo -ne '[###################################                             ](60%)\r'
sleep 5
echo -ne '[#########################################                       ](70%)\r'
sleep 5
echo -ne '[#################################################               ](80%)\r'
sleep 5
echo -ne '[#######################################################         ](90%)\r'
sleep 5
echo -ne '[############################################################### ](100%)\r'
echo -ne '\n'

echo ${normal}
#### end of NOSQL-POA ####
fi
