@version:3.2

# syslog-ng configuration file.
#
# This should behave pretty much like the original syslog on RedHat. But
# it could be configured a lot smarter.
#
# See syslog-ng(8) and syslog-ng.conf(5) for more information.
#

#options {
#       flush_lines (0);
#       time_reopen (10);
#       log_fifo_size (1000);
#       long_hostnames (off);
#       use_dns (no);
#       use_fqdn (no);
#       create_dirs (no);
#       keep_hostname (yes);
#};

#options {
#        flush_lines (0);
#        time_reopen (10);
#        log_fifo_size (1000000000);
#        log_iw_size (50000000);
#        log_fetch_limit (100000);
#        long_hostnames (off);        use_dns (no);
#        use_fqdn (no);
#        create_dirs (yes);
#        keep_hostname (yes);
##       use_time_recvd (yes);
##        keep_timestamp(no);
#};

options {
        flush_lines (100);
        time_reopen (10);
        log_fifo_size (1000);
        log_iw_size (100);
        log_fetch_limit (100);
        long_hostnames (off);
        use_dns (no);
        use_fqdn (no);
        create_dirs (yes);
        keep_hostname (yes);
#       use_time_recvd (yes);
#        keep_timestamp(no);
};

source s_sys {
	file ("/proc/kmsg" program_override("kernel: "));
	unix-stream ("/dev/log");
	internal();
#        tcp(ip(0.0.0.0) port(5000));
};

# trap incoming logs on tcp port 5000                                                                                                                                                                      
source s_tcp_net {
        tcp(ip(0.0.0.0) port(5000) max-connections(5000));
};


#destination d_cons { file("/dev/console"); };
#destination d_mesg { file("/var/log/messages"); };
#destination d_mail { file("/var/log/maillog" flush_lines(10)); };
#destination d_spol { file("/var/log/spooler"); };
#destination d_boot { file("/var/log/boot.log"); };
#destination d_kern { file("/var/log/kern"); };
#destination d_mlal { usertty("*"); };

destination d_auth { file("/var/log/secure"); };
destination d_cron { file("/var/log/cron"); };

#filter f_kernel     { facility(kern); };
#filter f_default    { level(info..emerg) and
#                        not (facility(mail)
#                        or facility(authpriv) 
#                        or facility(cron)); };
#filter f_mail       { facility(mail); };
#filter f_emergency  { level(emerg); };
#filter f_news       { facility(uucp) or
#                        (facility(news) 
#                        and level(crit..emerg)); };
#filter f_boot   { facility(local7); };

filter f_auth       { facility(authpriv); };
filter f_cron   { facility(cron); };

#log { source(s_tcp_net); filter(f_kernel); destination(d_cons); };
#log { source(s_tcp_net); filter(f_kernel); destination(d_kern); };
#log { source(s_tcp_net); filter(f_default); destination(d_mesg); };
#log { source(s_tcp_net); filter(f_auth); destination(d_auth); };
#log { source(s_tcp_net); filter(f_mail); destination(d_mail); };
#log { source(s_tcp_net); filter(f_emergency); destination(d_mlal); };
#log { source(s_tcp_net); filter(f_news); destination(d_spol); };
#log { source(s_tcp_net); filter(f_boot); destination(d_boot); };
#log { source(s_tcp_net); filter(f_cron); destination(d_cron); };

#log { source(s_sys); filter(f_kernel); destination(d_cons); };
#log { source(s_sys); filter(f_kernel); destination(d_kern); };
#log { source(s_sys); filter(f_default); destination(d_mesg); };
#log { source(s_sys); filter(f_mail); destination(d_mail); };
#log { source(s_sys); filter(f_emergency); destination(d_mlal); };
#log { source(s_sys); filter(f_news); destination(d_spol); };
#log { source(s_sys); filter(f_boot); destination(d_boot); };

log { source(s_sys); filter(f_auth); destination(d_auth); };
log { source(s_sys); filter(f_cron); destination(d_cron); };

filter f_bid2 { match("cc-bid2" value("PROGRAM") value("MSG") value("MSGHDR")); };
destination d_bid2 {
        file("/disk1/log/bid/$YEAR/$MONTH/$DAY/$HOUR$MIN.bid"
	owner( root ) group( root ) perm ( 0777 ) dir_perm( 0777 ) create_dirs ( yes )
        template ( "$MESSAGE\n" ) );
};
log { source(s_tcp_net); filter(f_bid2); destination(d_bid2); };

# vim:ft=syslog-ng:ai:si:ts=4:sw=4:et:
